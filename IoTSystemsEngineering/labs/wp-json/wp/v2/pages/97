{"id":97,"date":"2018-11-13T03:41:52","date_gmt":"2018-11-13T03:41:52","guid":{"rendered":"https:\/\/lehi.dev\/labs\/?page_id=97"},"modified":"2018-11-14T03:27:35","modified_gmt":"2018-11-14T03:27:35","slug":"lab5","status":"publish","type":"page","link":"https:\/\/lehi.dev\/labs\/lab5\/","title":{"rendered":"lab5"},"content":{"rendered":"<p><span style=\"font-weight: 400;\">IoT Security<\/span><\/p>\n<h1><span style=\"font-weight: 400;\">Online Link<\/span><\/h1>\n<p><span style=\"font-weight: 400;\">This lab is available as part of my online portfolio at: <\/span><a href=\"https:\/\/lehi.dev\/labs\/lab5\"><span style=\"font-weight: 400;\">https:\/\/lehi.dev\/labs\/lab5<\/span><\/a><\/p>\n<p>&nbsp;<\/p>\n<h1><span style=\"font-weight: 400;\">Objective<\/span><\/h1>\n<p><span style=\"font-weight: 400;\">The purpose of this lab is to learn how to use a relay to control your garage door Opener. Establish complex conditions by an additional sensor, these principles include:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Enumerate requirements from use case and user stories.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Become more familiar with representing the desired system by using flowcharts, state diagrams, etc.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Learn to plan what materials will be necessary to accomplish the system\u2019s purpose<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Build Iot sensors by utilizing GPIO pins for inputs.<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Understand how relay works<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">IoT security design architecture<\/span><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h1><span style=\"font-weight: 400;\">Materials<\/span><\/h1>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Personal Computer<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">1 x Wemos D1 Mini microcontrollers (ESP8266)<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">1 x 2.5A USB Power Supply with micro USB Cable<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">1 x breadboard <\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">1 x Relay sensor<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">1 x raspberry pi with SD micro sd card and charger<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Arduino IDE<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Fritzing<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Jump wires<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Soldering iron<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Solder<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">GPIO pinout guide<\/span><\/li>\n<\/ul>\n<h1><span style=\"font-weight: 400;\">References<\/span><\/h1>\n<p><span style=\"font-weight: 400;\">The following resources were used in this lab:<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\"><a href=\"https:\/\/hackaday.com\/2014\/05\/25\/arduino-garage-door-opener-is-security-minded\/\"><span style=\"font-weight: 400;\">https:\/\/hackaday.com\/2014\/05\/25\/arduino-garage-door-opener-is-security-minded\/<\/span><\/a><span style=\"font-weight: 400;\"> \u00a0&#8211; Great tutorial on arduino garage door opener with security in mind.<\/span><\/li>\n<li style=\"font-weight: 400;\"><a href=\"https:\/\/www.instructables.com\/id\/Garage-Door-Opener-Remote-Web-interface-With-Esp82\/\"><span style=\"font-weight: 400;\">https:\/\/www.instructables.com\/id\/Garage-Door-Opener-Remote-Web-interface-With-Esp82\/<\/span><\/a><span style=\"font-weight: 400;\"> \u00a0&#8211; Garage door openenr with web interface.<\/span><\/li>\n<li style=\"font-weight: 400;\"><a href=\"https:\/\/openhomeautomation.net\/control-relay-anywhere-esp8266\"><span style=\"font-weight: 400;\">https:\/\/openhomeautomation.net\/control-relay-anywhere-esp8266<\/span><\/a><span style=\"font-weight: 400;\"> &#8211; Control a relay from anywhere.<\/span><\/li>\n<li style=\"font-weight: 400;\"><a href=\"https:\/\/techtutorialsx.com\/2017\/03\/11\/esp8266-controlling-a-relay\/\"><span style=\"font-weight: 400;\">https:\/\/techtutorialsx.com\/2017\/03\/11\/esp8266-controlling-a-relay\/<\/span><\/a><span style=\"font-weight: 400;\"> \u00a0&#8211; Controlling a relay.<\/span><\/li>\n<li style=\"font-weight: 400;\"><a href=\"https:\/\/www.youtube.com\/watch?v=i6sZ_leNkJo\"><span style=\"font-weight: 400;\">https:\/\/www.youtube.com\/watch?v=i6sZ_leNkJo<\/span><\/a><span style=\"font-weight: 400;\"> &#8211; Very good youtube video describing the process of working with an arduino relay.<\/span><\/li>\n<li style=\"font-weight: 400;\"><a href=\"https:\/\/learningsuite.byu.edu\/plugins\/Upload\/fileDownload.php?fileId=eb3c31da-DlPK-iEBv-wtK8-Dd067cb822a2\"><span style=\"font-weight: 400;\">https:\/\/learningsuite.byu.edu\/plugins\/Upload\/fileDownload.php?fileId=eb3c31da-DlPK-iEBv-wtK8-Dd067cb822a2<\/span><\/a><span style=\"font-weight: 400;\"> &#8211; Lab 5 requirements.<\/span><\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h1><span style=\"font-weight: 400;\">Procedures<\/span><\/h1>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Having done all the previous lab to make a collection of ESP8266 along with sensors to send data amongst themselves \u00a0(ultrasonic sensor, stoplight, reed switch, raspberry pi running mosquitto), now it is time to add one more arduino sensor with a relay. Solder the headers on the additional Wemos D1 mini, also solder the headers for the relay.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Once Soldering are done then connect the relay shield on top of arduino shield.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">For the relay script import library ESP8266WiFi<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Connect to a wifi and start a server.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Create 2 http rest endpoints one for relay on and another for relay off so you can control relay state. Change relay state accordingly. <\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">The logic set up was the following in pseudo code:<\/span>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">If Relay circuit is off then turn off the relay<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">If Relay circuit is on then turn on the relay<\/span><\/li>\n<li><span style=\"font-weight: 400;\">Update relay state<\/span><\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Models:<\/span>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Functionality: State machine as shown on the diagram below, this is a simplified form of the relay state machine. <\/span><\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<p><a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.39.57-PM.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-129\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.39.57-PM.png\" alt=\"\" width=\"1556\" height=\"666\" srcset=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.39.57-PM.png 1556w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.39.57-PM-300x128.png 300w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.39.57-PM-768x329.png 768w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.39.57-PM-1024x438.png 1024w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/><\/a><\/p>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">On Start up, the machine will be on Relay Off state<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Case \u201cRELAY OFF\u201d<\/span>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">If system receives \/relay=on then system changes to \u201cRELAY ON\u201d state.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">If system receives \/relay=off then system remain in \u201cRELAY OFF\u201d state.<\/span><\/li>\n<\/ul>\n<\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Case \u201cRELAY ON\u201d<\/span>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">If system receives \/relay=on then system remains in \u201cRELAY ON\u201d state.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">If system receives \/relay=off then system changes to \u201cRELAY OFF\u201d state.<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<ol>\n<li style=\"list-style-type: none;\">\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">System Flow: See Appendix 1.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Component and Schematic Diagram: The relay is represented below by the following diagrams, relay is stacked on top of ESP8266 (Component and Schematic Diagram respectively)<\/span><\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<p><a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.24.02-PM.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-103\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.24.02-PM.png\" alt=\"\" width=\"910\" height=\"1238\" srcset=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.24.02-PM.png 910w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.24.02-PM-221x300.png 221w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.24.02-PM-768x1045.png 768w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.24.02-PM-753x1024.png 753w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/><\/a><\/p>\n<p><a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.27.50-PM.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-105\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.27.50-PM.png\" alt=\"\" width=\"1454\" height=\"924\" srcset=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.27.50-PM.png 1454w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.27.50-PM-300x191.png 300w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.27.50-PM-768x488.png 768w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-10.27.50-PM-1024x651.png 1024w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Diagrams were facilitated by open source programs such as: Google drive plugin draw.io Diagrams and Fritzing.<\/span><\/p>\n<p>&nbsp;<\/p>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Program the code in the Arduino IDE <\/span>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Code the Arduino GPIO pins interaction with D1 pin and 5V is already being provided by the stacked shield accordingly to match the component\/schematic diagram.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Test\/Debug relay as to make sure the logic is sound. You can debug by first making sure the baud rate is set up in setup method. Then click on serial monitor icon \u00a0<a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/09\/Screen-Shot-2018-09-27-at-12.21.06-AM.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-41\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/09\/Screen-Shot-2018-09-27-at-12.21.06-AM.png\" alt=\"\" width=\"48\" height=\"50\" \/><\/a><\/span><span style=\"font-weight: 400;\">. <\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Use commands such as Serial.println(&lt;variableToBeEvaluated&gt;) to print out debug messages, so you can make sure what you think the code is doing is actually happening.<\/span><\/li>\n<\/ol>\n<\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<h1><span style=\"font-weight: 400;\">IoT Security Architecture<\/span><\/h1>\n<p>&nbsp;<\/p>\n<p><span style=\"font-weight: 400;\">Some possible attack vectors on the devices running on a network are: DoS, connect to an open network, breaking a weak password, having services or network with default passwords, sharing password with neighbors, using a weak network encryption such as WEP, etc.<\/span><\/p>\n<p><span style=\"font-weight: 400;\">One way to design IoT systems to be accessible from a different network to the network running all these devices is to join the networks via VPN. Have a VPN server set up to expose the private network (IoT devices) to the public network (internet) where you can connect to it using a VPN client. Using strong passwords potentially the ones that are not in a dictionary and that are generated using a complex set of rules from a password generator like LastPass <\/span><a href=\"https:\/\/www.lastpass.com\/password-generator\"><span style=\"font-weight: 400;\">https:\/\/www.lastpass.com\/password-generator<\/span><\/a> <span style=\"font-weight: 400;\">would be a good resource, save the password in a locked down file or a password helper like LastPass. Use trusted VPN servers and clients. With this design you should be able to access home private network via VPN and therefore able to interact with ESP8266 devices, like the relay garage door opener website and send commands to open or close it. Also by laying down a few house rules may help in protecting the devices in the network as well as implementing some network rules, for instance:<\/span><\/p>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">No more sharing network credentials with neighbors<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Change all default passwords<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Using strong network encryption such as WPA AES<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Create a guest network that is separate from the main home network<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Only connect important devices to the main home network or even a separate network specialized to only have a few devices as long as it is not the open guest network.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Review network logs and which devices are attached to your network as to make sure there is no hacker connected.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Get a network switch that has <\/span><span style=\"font-weight: 400;\">Auto DoS prevention, this will protect your network from DOS attacks.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">On your wifi router disable Port Scan and enable DoS Protection, which will protect you wireless network from attacks.<\/span><\/li>\n<\/ol>\n<p><a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-11.30.17-AM.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-116\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-11.30.17-AM.png\" alt=\"\" width=\"1422\" height=\"719\" srcset=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-11.30.17-AM.png 1422w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-11.30.17-AM-300x152.png 300w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-11.30.17-AM-768x388.png 768w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-11.30.17-AM-1024x518.png 1024w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/><\/a><\/p>\n<h1><span style=\"font-weight: 400;\">Thought Questions<\/span><\/h1>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">How did you secure devices that are not inherently secure devices? How does layering security approaches help?<\/span><\/li>\n<\/ul>\n<ol>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">I joined all the devices on a secured internet using WPA2-Personal, WPA AES \u00a0encryption.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">To keep unwanted devices off of the trusted network I have used a strong password, not in a dictionary, that were generated by a strong password generator, using LastPass (<\/span><a href=\"https:\/\/www.lastpass.com\/password-generator\"><span style=\"font-weight: 400;\">https:\/\/www.lastpass.com\/password-generator<\/span><\/a><span style=\"font-weight: 400;\">)<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">I have hidden the SSID broadcasting the networking name, so that people close by will not be able to scan my SSID.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">I removed all the clients keys and secrets to a different file not in the code for any device, created a file with client keys and secrets and removed that file from git using \u201c.gitignore\u201d so it doesn\u2019t pushed to git repository.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">To open up the home private network you can setup a VPN server and login from external network using a client VPN, which internally negotiates authentication using VPN certificates.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Layering security approaches help because you don\u2019t want to be the low hanging fruit waiting for a hacker to attack. By developing layers of security you will no longer be that low hanging fruit that hackers ever so often look for to take advantage of. You\u2019re making it harder for a hacker to attack you specifically and he\/she may just try find someone else that is easier to hack into and faster.<\/span><\/li>\n<\/ol>\n<p>&nbsp;<\/p>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">What was the biggest challenge you overcame in this lab? <\/span><\/li>\n<\/ul>\n<p><span style=\"font-weight: 400;\">One of my biggest challenge was that I soldered the relay pins wrong and attaching to the ESP8266 did not work at all, so I had to desolder the pins and in the process damaged the relay and then tried again to solder with new pins. Also making all the devices to connect to my phone hotspot was a challenge because my phone only allows hotspot for up to 5 clients and I had 5 devices and a laptop to be on the same network making it 6 total, so I had to use my own home network to make all devices work as it should.<\/span><\/p>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">Please estimate the total time you spent on this lab and report. <\/span>\n<ul>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">3 hour building and refactoring the circuit and cluster of devices to work well.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">10 hours coding the server and fixing bugs <\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">4 hours working on the lab report using tools such as Google draw.io Diagrams \u00a0and fritzing.<\/span><\/li>\n<li style=\"font-weight: 400;\"><span style=\"font-weight: 400;\">2 hours publishing a website with lab 5 instructions.<\/span><\/li>\n<\/ul>\n<\/li>\n<\/ul>\n<p>&nbsp;<\/p>\n<h1><span style=\"font-weight: 400;\">Certification of Work<\/span><\/h1>\n<p><span style=\"font-weight: 400;\">I certify that the solution presented in this lab represents my own work. In the case where I have borrowed code or ideas from another person, I have provided a link to the author\u2019s work in the references, and included a citation in the comments of my code.<\/span><\/p>\n<p>&nbsp;<\/p>\n<p><span style=\"font-weight: 400;\">&#8212; Lehi Alcantara<\/span><\/p>\n<h1><span style=\"font-weight: 400;\">Appendix<\/span><\/h1>\n<h2><span style=\"font-weight: 400;\">Appendix 1: System Flowchart<\/span><\/h2>\n<p><a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/System-Flowchart-Lab-5-2.jpg\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-131\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/System-Flowchart-Lab-5-2.jpg\" alt=\"\" width=\"741\" height=\"1371\" srcset=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/System-Flowchart-Lab-5-2.jpg 741w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/System-Flowchart-Lab-5-2-162x300.jpg 162w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/System-Flowchart-Lab-5-2-553x1024.jpg 553w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Appendix 2: Relay website On State<\/span><\/p>\n<p><a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.03-PM.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-109\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.03-PM.png\" alt=\"\" width=\"3360\" height=\"444\" srcset=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.03-PM.png 3360w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.03-PM-300x40.png 300w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.03-PM-768x101.png 768w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.03-PM-1024x135.png 1024w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Appendix 3: Relay website Off State<\/span><\/p>\n<p><a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.17-PM.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-110\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.17-PM.png\" alt=\"\" width=\"3360\" height=\"392\" srcset=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.17-PM.png 3360w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.17-PM-300x35.png 300w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.17-PM-768x90.png 768w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-12-at-11.58.17-PM-1024x119.png 1024w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/><\/a><\/p>\n<p><span style=\"font-weight: 400;\">Appendix 4: All System Diagram State<\/span><\/p>\n<p><a href=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.53.58-PM.png\"><img loading=\"lazy\" class=\"alignnone size-full wp-image-132\" src=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.53.58-PM.png\" alt=\"\" width=\"1670\" height=\"1026\" srcset=\"https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.53.58-PM.png 1670w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.53.58-PM-300x184.png 300w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.53.58-PM-768x472.png 768w, https:\/\/lehi.dev\/labs\/wp-content\/uploads\/2018\/11\/Screen-Shot-2018-11-13-at-7.53.58-PM-1024x629.png 1024w\" sizes=\"(max-width: 706px) 89vw, (max-width: 767px) 82vw, 740px\" \/><\/a><\/p>\n<h2><span style=\"font-weight: 400;\">Appendix 6: Arduino Code<\/span><\/h2>\n<p>&nbsp;<\/p>\n<p><span style=\"font-weight: 400;\">(Available at <\/span><a href=\"https:\/\/github.com\/ylehilds\/iot-security\"><span style=\"font-weight: 400;\">https:\/\/github.com\/ylehilds\/iot-security<\/span><\/a><span style=\"font-weight: 400;\">)<\/span><\/p>\n<p>&nbsp;<\/p>\n","protected":false},"excerpt":{"rendered":"<p>IoT Security Online Link This lab is available as part of my online portfolio at: https:\/\/lehi.dev\/labs\/lab5 &nbsp; Objective The purpose of this lab is to learn how to use a relay to control your garage door Opener. Establish complex conditions by an additional sensor, these principles include: Enumerate requirements from use case and user stories. &hellip; <\/p>\n<p class=\"link-more\"><a href=\"https:\/\/lehi.dev\/labs\/lab5\/\" class=\"more-link\">Continue reading<span class=\"screen-reader-text\"> &#8220;lab5&#8221;<\/span><\/a><\/p>\n","protected":false},"author":1,"featured_media":0,"parent":0,"menu_order":0,"comment_status":"closed","ping_status":"closed","template":"","meta":[],"_links":{"self":[{"href":"https:\/\/lehi.dev\/labs\/wp-json\/wp\/v2\/pages\/97"}],"collection":[{"href":"https:\/\/lehi.dev\/labs\/wp-json\/wp\/v2\/pages"}],"about":[{"href":"https:\/\/lehi.dev\/labs\/wp-json\/wp\/v2\/types\/page"}],"author":[{"embeddable":true,"href":"https:\/\/lehi.dev\/labs\/wp-json\/wp\/v2\/users\/1"}],"replies":[{"embeddable":true,"href":"https:\/\/lehi.dev\/labs\/wp-json\/wp\/v2\/comments?post=97"}],"version-history":[{"count":25,"href":"https:\/\/lehi.dev\/labs\/wp-json\/wp\/v2\/pages\/97\/revisions"}],"predecessor-version":[{"id":136,"href":"https:\/\/lehi.dev\/labs\/wp-json\/wp\/v2\/pages\/97\/revisions\/136"}],"wp:attachment":[{"href":"https:\/\/lehi.dev\/labs\/wp-json\/wp\/v2\/media?parent=97"}],"curies":[{"name":"wp","href":"https:\/\/api.w.org\/{rel}","templated":true}]}}